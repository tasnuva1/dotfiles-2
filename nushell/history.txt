# Nushell Config File
#
# version = "0.85.0"

# For more information on defining custom themes, see
# https://www.nushell.sh/book/coloring_and_theming.html
# And here is the theme collection
# https://github.com/nushell/nu_scripts/tree/main/themes
let dark_theme = {
    # color for nushell primitives
    separator: white
    leading_trailing_space_bg: { attr: n } # no fg, no bg, attr none effectively turns this off
    header: green_bold
    empty: blue
    # Closures can be used to choose colors for specific values.
    # The value (in this case, a bool) is piped into the closure.
    # eg) {|| if $in { 'light_cyan' } else { 'light_gray' } }
    bool: light_cyan
    int: white
    filesize: cyan
    duration: white
    date: purple
    range: white
    float: white
    string: white
    nothing: white
    binary: white
    cell-path: white
    row_index: green_bold
    record: white
    list: white
    block: white
    hints: dark_gray
    search_result: {bg: red fg: white}
    shape_and: purple_bold
    shape_binary: purple_bold
    shape_block: blue_bold
    shape_bool: light_cyan
    shape_closure: green_bold
    shape_custom: green
    shape_datetime: cyan_bold
    shape_directory: cyan
    shape_external: cyan
    shape_externalarg: green_bold
    shape_filepath: cyan
    shape_flag: blue_bold
    shape_float: purple_bold
    # shapes are used to change the cli syntax highlighting
    shape_garbage: { fg: white bg: red attr: b}
    shape_globpattern: cyan_bold
    shape_int: purple_bold
    shape_internalcall: cyan_bold
    shape_list: cyan_bold
    shape_literal: blue
    shape_match_pattern: green
    shape_matching_brackets: { attr: u }
    shape_nothing: light_cyan
    shape_operator: yellow
    shape_or: purple_bold
    shape_pipe: purple_bold
    shape_range: yellow_bold
    shape_record: cyan_bold
    shape_redirection: purple_bold
    shape_signature: green_bold
    shape_string: green
    shape_string_interpolation: cyan_bold
    shape_table: blue_bold
    shape_variable: purple
    shape_vardecl: purple
}

let light_theme = {
    # color for nushell primitives
    separator: dark_gray
    leading_trailing_space_bg: { attr: n } # no fg, no bg, attr none effectively turns this off
    header: green_bold
    empty: blue
    # Closures can be used to choose colors for specific values.
    # The value (in this case, a bool) is piped into the closure.
    # eg) {|| if $in { 'dark_cyan' } else { 'dark_gray' } }
    bool: dark_cyan
    int: dark_gray
    filesize: cyan_bold
    duration: dark_gray
    date: purple
    range: dark_gray
    float: dark_gray
    string: dark_gray
    nothing: dark_gray
    binary: dark_gray
    cell-path: dark_gray
    row_index: green_bold
    record: white
    list: white
    block: white
    hints: dark_gray
    search_result: {fg: white bg: red}
    shape_and: purple_bold
    shape_binary: purple_bold
    shape_block: blue_bold
    shape_bool: light_cyan
    shape_closure: green_bold
    shape_custom: green
    shape_datetime: cyan_bold
    shape_directory: cyan
    shape_external: cyan
    shape_externalarg: green_bold
    shape_filepath: cyan
    shape_flag: blue_bold
    shape_float: purple_bold
    # shapes are used to change the cli syntax highlighting
    shape_garbage: { fg: white bg: red attr: b}
    shape_globpattern: cyan_bold
    shape_int: purple_bold
    shape_internalcall: cyan_bold
    shape_list: cyan_bold
    shape_literal: blue
    shape_match_pattern: green
    shape_matching_brackets: { attr: u }
    shape_nothing: light_cyan
    shape_operator: yellow
    shape_or: purple_bold
    shape_pipe: purple_bold
    shape_range: yellow_bold
    shape_record: cyan_bold
    shape_redirection: purple_bold
    shape_signature: green_bold
    shape_string: green
    shape_string_interpolation: cyan_bold
    shape_table: blue_bold
    shape_variable: purple
    shape_vardecl: purple
}

# External completer example
# let carapace_completer = {|spans|
#     carapace $spans.0 nushell $spans | from json
# }

# The default config record. This is where much of your global configuration is setup.
$env.config = {
    show_banner: false # true or false to enable or disable the welcome banner at startup

    ls: {
        use_ls_colors: true # use the LS_COLORS environment variable to colorize output
        clickable_links: true # enable or disable clickable links. Your terminal has to support links.
    }

    rm: {
        always_trash: false # always act as if -t was given. Can be overridden with -p
    }

    cd: {
        abbreviations: false # allows `cd s/o/f` to expand to `cd some/other/folder`
    }

    table: {
        mode: rounded # basic, compact, compact_double, light, thin, with_love, rounded, reinforced, heavy, none, other
        index_mode: always # "always" show indexes, "never" show indexes, "auto" = show indexes when a table has "index" column
        show_empty: true # show 'empty list' and 'empty record' placeholders for command output
        padding: { left: 1, right: 1 } # a left right padding of each column in a table
        trim: {
            methodology: wrapping # wrapping or truncating
            wrapping_try_keep_words: true # A strategy used by the 'wrapping' methodology
            truncating_suffix: "..." # A suffix used by the 'truncating' methodology
        }
        header_on_separator: false # show header text on separator/border line
    }

    error_style: "fancy" # "fancy" or "plain" for screen reader-friendly error messages

    # datetime_format determines what a datetime rendered in the shell would look like.
    # Behavior without this configuration point will be to "humanize" the datetime display,
    # showing something like "a day ago."
    datetime_format: {
        # normal: '%a, %d %b %Y %H:%M:%S %z'    # shows up in displays of variables or other datetime's outside of tables
        # table: '%m/%d/%y %I:%M:%S%p'          # generally shows up in tabular outputs such as ls. commenting this out will change it to the default human readable datetime format
    }

    explore: {
        status_bar_background: {fg: "#1D1F21", bg: "#C4C9C6"},
        command_bar_text: {fg: "#C4C9C6"},
        highlight: {fg: "black", bg: "yellow"},
        status: {
            error: {fg: "white", bg: "red"},
            warn: {}
            info: {}
        },
        table: {
            split_line: {fg: "#404040"},
            selected_cell: {},
            selected_row: {},
            selected_column: {},
            show_cursor: true,
            line_head_top: true,
            line_head_bottom: true,
            line_shift: true,
            line_index: true,
        },
    }

    history: {
        max_size: 100_000 # Session has to be reloaded for this to take effect
        sync_on_enter: true # Enable to share history between multiple sessions, else you have to close the session to write history to file
        file_format: "plaintext" # "sqlite" or "plaintext"
        isolation: false # only available with sqlite file_format. true enables history isolation, false disables it. true will allow the history to be isolated to the current session using up/down arrows. false will allow the history to be shared across all sessions.
    }

    completions: {
        case_sensitive: false # set to true to enable case-sensitive completions
        quick: true    # set this to false to prevent auto-selecting completions when only one remains
        partial: true    # set this to false to prevent partial filling of the prompt
        algorithm: "prefix"    # prefix or fuzzy
        external: {
            enable: true # set to false to prevent nushell looking into $env.PATH to find more suggestions, `false` recommended for WSL users as this look up may be very slow
            max_results: 100 # setting it lower can improve completion performance at the cost of omitting some options
            completer: null # check 'carapace_completer' above as an example
        }
    }

    filesize: {
        metric: true # true => KB, MB, GB (ISO standard), false => KiB, MiB, GiB (Windows standard)
        format: "auto" # b, kb, kib, mb, mib, gb, gib, tb, tib, pb, pib, eb, eib, auto
    }

    cursor_shape: {
        emacs: line # block, underscore, line, blink_block, blink_underscore, blink_line, inherit to skip setting cursor shape (line is the default)
        vi_insert: block # block, underscore, line, blink_block, blink_underscore, blink_line, inherit to skip setting cursor shape (block is the default)
        vi_normal: underscore # block, underscore, line, blink_block, blink_underscore, blink_line, inherit to skip setting cursor shape (underscore is the default)
    }

    color_config: $dark_theme # if you want a more interesting theme, you can replace the empty record with `$dark_theme`, `$light_theme` or another custom record
    use_grid_icons: true
    footer_mode: "25" # always, never, number_of_rows, auto
    float_precision: 2 # the precision for displaying floats in tables
    buffer_editor: "" # command that will be used to edit the current line buffer with ctrl+o, if unset fallback to $env.EDITOR and $env.VISUAL
    use_ansi_coloring: true
    bracketed_paste: true # enable bracketed paste, currently useless on windows
    edit_mode: emacs # emacs, vi
    shell_integration: false # enables terminal shell integration. Off by default, as some terminals have issues with this.
    render_right_prompt_on_last_line: false # true or false to enable or disable right prompt to be rendered on last line of the prompt.

    hooks: {
        pre_prompt: [{ null }] # run before the prompt is shown
        pre_execution: [{ null }] # run before the repl input is run
        env_change: {
            PWD: [{|before, after| null }] # run if the PWD environment is different since the last repl input
        }
        display_output: "if (term size).columns >= 100 { table -e } else { table }" # run to display the output of a pipeline
        command_not_found: { null } # return an error message when a command is not found
    }

    menus: [
        # Configuration for default nushell menus
        # Note the lack of source parameter
        {
            name: completion_menu
            only_buffer_difference: false
            marker: "| "
            type: {
                layout: columnar
                columns: 4
                col_width: 20     # Optional value. If missing all the screen width is used to calculate column width
                col_padding: 2
            }
            style: {
                text: green
                selected_text: green_reverse
                description_text: yellow
            }
        }
        {
            name: history_menu
            only_buffer_difference: true
            marker: "? "
            type: {
                layout: list
                page_size: 10
            }
            style: {
                text: green
                selected_text: green_reverse
                description_text: yellow
            }
        }
        {
            name: help_menu
            only_buffer_difference: true
            marker: "? "
            type: {
                layout: description
                columns: 4
                col_width: 20     # Optional value. If missing all the screen width is used to calculate column width
                col_padding: 2
                selection_rows: 4
                description_rows: 10
            }
            style: {
                text: green
                selected_text: green_reverse
                description_text: yellow
            }
        }
    ]

    keybindings: [
        {
            name: completion_menu
            modifier: none
            keycode: tab
            mode: [emacs vi_normal vi_insert]
            event: {
                until: [
                    { send: menu name: completion_menu }
                    { send: menunext }
                    { edit: complete }
                ]
            }
        }
        {
            name: history_menu
            modifier: control
            keycode: char_r
            mode: [emacs, vi_insert, vi_normal]
            event: { send: menu name: history_menu }
        }
        {
            name: help_menu
            modifier: none
            keycode: f1
            mode: [emacs, vi_insert, vi_normal]
            event: { send: menu name: help_menu }
        }
        {
            name: completion_previous_menu
            modifier: shift
            keycode: backtab
            mode: [emacs, vi_normal, vi_insert]
            event: { send: menuprevious }
        }
        {
            name: next_page_menu
            modifier: control
            keycode: char_x
            mode: emacs
            event: { send: menupagenext }
        }
        {
            name: undo_or_previous_page_menu
            modifier: control
            keycode: char_z
            mode: emacs
            event: {
                until: [
                    { send: menupageprevious }
                    { edit: undo }
                ]
            }
        }
        {
            name: escape
            modifier: none
            keycode: escape
            mode: [emacs, vi_normal, vi_insert]
            event: { send: esc }    # NOTE: does not appear to work
        }
        {
            name: cancel_command
            modifier: control
            keycode: char_c
            mode: [emacs, vi_normal, vi_insert]
            event: { send: ctrlc }
        }
        {
            name: quit_shell
            modifier: control
            keycode: char_d
            mode: [emacs, vi_normal, vi_insert]
            event: { send: ctrld }
        }
        {
            name: clear_screen
            modifier: control
            keycode: char_l
            mode: [emacs, vi_normal, vi_insert]
            event: { send: clearscreen }
        }
        {
            name: search_history
            modifier: control
            keycode: char_q
            mode: [emacs, vi_normal, vi_insert]
            event: { send: searchhistory }
        }
        {
            name: open_command_editor
            modifier: control
            keycode: char_o
            mode: [emacs, vi_normal, vi_insert]
            event: { send: openeditor }
        }
        {
            name: move_up
            modifier: none
            keycode: up
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: menuup}
                    {send: up}
                ]
            }
        }
        {
            name: move_down
            modifier: none
            keycode: down
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: menudown}
                    {send: down}
                ]
            }
        }
        {
            name: move_left
            modifier: none
            keycode: left
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: menuleft}
                    {send: left}
                ]
            }
        }
        {
            name: move_right_or_take_history_hint
            modifier: none
            keycode: right
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: historyhintcomplete}
                    {send: menuright}
                    {send: right}
                ]
            }
        }
        {
            name: move_one_word_left
            modifier: control
            keycode: left
            mode: [emacs, vi_normal, vi_insert]
            event: {edit: movewordleft}
        }
        {
            name: move_one_word_right_or_take_history_hint
            modifier: control
            keycode: right
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: historyhintwordcomplete}
                    {edit: movewordright}
                ]
            }
        }
        {
            name: move_to_line_start
            modifier: none
            keycode: home
            mode: [emacs, vi_normal, vi_insert]
            event: {edit: movetolinestart}
        }
        {
            name: move_to_line_start
            modifier: control
            keycode: char_a
            mode: [emacs, vi_normal, vi_insert]
            event: {edit: movetolinestart}
        }
        {
            name: move_to_line_end_or_take_history_hint
            modifier: none
            keycode: end
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: historyhintcomplete}
                    {edit: movetolineend}
                ]
            }
        }
        {
            name: move_to_line_end_or_take_history_hint
            modifier: control
            keycode: char_e
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: historyhintcomplete}
                    {edit: movetolineend}
                ]
            }
        }
        {
            name: move_to_line_start
            modifier: control
            keycode: home
            mode: [emacs, vi_normal, vi_insert]
            event: {edit: movetolinestart}
        }
        {
            name: move_to_line_end
            modifier: control
            keycode: end
            mode: [emacs, vi_normal, vi_insert]
            event: {edit: movetolineend}
        }
        {
            name: move_up
            modifier: control
            keycode: char_p
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: menuup}
                    {send: up}
                ]
            }
        }
        {
            name: move_down
            modifier: control
            keycode: char_t
            mode: [emacs, vi_normal, vi_insert]
            event: {
                until: [
                    {send: menudown}
                    {send: down}
                ]
            }
        }
        {
            name: delete_one_character_backward
            modifier: none
            keycode: backspace
            mode: [emacs, vi_insert]
            event: {edit: backspace}
        }
        {
            name: delete_one_word_backward
            modifier: control
            keycode: backspace
            mode: [emacs, vi_insert]
            event: {edit: backspaceword}
        }
        {
            name: delete_one_character_forward
            modifier: none
            keycode: delete
            mode: [emacs, vi_insert]
            event: {edit: delete}
        }
        {
            name: delete_one_character_forward
            modifier: control
            keycode: delete
            mode: [emacs, vi_insert]
            event: {edit: delete}
        }
        {
            name: delete_one_character_forward
            modifier: control
            keycode: char_h
            mode: [emacs, vi_insert]
            event: {edit: backspace}
        }
        {
            name: delete_one_word_backward
            modifier: control
            keycode: char_w
            mode: [emacs, vi_insert]
            event: {edit: backspaceword}
        }
        {
            name: move_left
            modifier: none
            keycode: backspace
            mode: vi_normal
            event: {edit: moveleft}
        }
        {
            name: newline_or_run_command
            modifier: none
            keycode: enter
            mode: emacs
            event: {send: enter}
        }
        {
            name: move_left
            modifier: control
            keycode: char_b
            mode: emacs
            event: {
                until: [
                    {send: menuleft}
                    {send: left}
                ]
            }
        }
        {
            name: move_right_or_take_history_hint
            modifier: control
            keycode: char_f
            mode: emacs
            event: {
                until: [
                    {send: historyhintcomplete}
                    {send: menuright}
                    {send: right}
                ]
            }
        }
        {
            name: redo_change
            modifier: control
            keycode: char_g
            mode: emacs
            event: {edit: redo}
        }
        {
            name: undo_change
            modifier: control
            keycode: char_z
            mode: emacs
            event: {edit: undo}
        }
        {
            name: paste_before
            modifier: control
            keycode: char_y
            mode: emacs
            event: {edit: pastecutbufferbefore}
        }
        {
            name: cut_word_left
            modifier: control
            keycode: char_w
            mode: emacs
            event: {edit: cutwordleft}
        }
        {
            name: cut_line_to_end
            modifier: control
            keycode: char_k
            mode: emacs
            event: {edit: cuttoend}
        }
        {
            name: cut_line_from_start
            modifier: control
            keycode: char_u
            mode: emacs
            event: {edit: cutfromstart}
        }
        {
            name: swap_graphemes
            modifier: control
            keycode: char_t
            mode: emacs
            event: {edit: swapgraphemes}
        }
        {
            name: move_one_word_left
            modifier: alt
            keycode: left
            mode: emacs
            event: {edit: movewordleft}
        }
        {
            name: move_one_word_right_or_take_history_hint
            modifier: alt
            keycode: right
            mode: emacs
            event: {
                until: [
                    {send: historyhintwordcomplete}
                    {edit: movewordright}
                ]
            }
        }
        {
            name: move_one_word_left
            modifier: alt
            keycode: char_b
            mode: emacs
            event: {edit: movewordleft}
        }
        {
            name: move_one_word_right_or_take_history_hint
            modifier: alt
            keycode: char_f
            mode: emacs
            event: {
                until: [
                    {send: historyhintwordcomplete}
                    {edit: movewordright}
                ]
            }
        }
        {
            name: delete_one_word_forward
            modifier: alt
            keycode: delete
            mode: emacs
            event: {edit: deleteword}
        }
        {
            name: delete_one_word_backward
            modifier: alt
            keycode: backspace
            mode: emacs
            event: {edit: backspaceword}
        }
        {
            name: delete_one_word_backward
            modifier: alt
            keycode: char_m
            mode: emacs
            event: {edit: backspaceword}
        }
        {
            name: cut_word_to_right
            modifier: alt
            keycode: char_d
            mode: emacs
            event: {edit: cutwordright}
        }
        {
            name: upper_case_word
            modifier: alt
            keycode: char_u
            mode: emacs
            event: {edit: uppercaseword}
        }
        {
            name: lower_case_word
            modifier: alt
            keycode: char_l
            mode: emacs
            event: {edit: lowercaseword}
        }
        {
            name: capitalize_char
            modifier: alt
            keycode: char_c
            mode: emacs
            event: {edit: capitalizechar}
        }
    ]
}

alias he = helix
alias v = nvim
alias cat = bat
alias sdn = sudo shutdown -h now
alias p = sudo pacman
alias g = git 
alias lf = lfub
alias ll = ls -l

alias vv = cd /home/fahmida/downloads/videos
alias cac = cd /home/fahmida/.cache
alias cf = cd /home/fahmida/.config
alias aco = cd /mnt/3/Courses/media/audiobooks
alias dco = cd /mnt/3/Courses/tor-browser/Browser/Downloads/digitalBooks
alias vco = cd /mnt/4/Courses
alias mo = cd /mnt/3/Movies
alias h = cd /home/fahmida
alias mn = cd /mnt
alias sc = cd /home/fahmida/.local/bin
alias src = cd /home/fahmida/.local/src
alias dt = cd /home/fahmida/.local/share
alias bf = helix /home/fahmida/.config/shell/bm-files
alias bd = helix /home/fahmida/.config/shell/bm-dirs
alias cfx = helix /home/fahmida/.config/x11/xresources
alias cfb = helix ~/.local/src/dwmblocks/config.h
alias cfv = helix /home/fahmida/.config/nvim/init.vim
alias cfz = helix /home/fahmida/.config/zsh/.zshrc
alias cfa = helix /home/fahmida/.config/shell/aliasrc
alias cfs = helix /home/fahmida/.config/shell/shortcutrc
alias cfp = helix /home/fahmida/.config/shell/profile
alias cfm = helix /home/fahmida/.config/mutt/muttrc
alias cfn = helix /home/fahmida/.config/newsboat/config
alias cfu = helix /home/fahmida/.config/newsboat/urls
alias cfmb = helix /home/fahmida/.config/ncmpcpp/bindings
alias cfmc = helix /home/fahmida/.config/ncmpcpp/config
alias cfl = helix /home/fahmida/.config/lf/lfrc
alias cfL = helix /home/fahmida/.config/lf/scope
alias cfX = helix /home/fahmida/.config/nsxiv/exec/key-handler



ls
lf
ssa
h .config/shell/aliasrc
helix .config/shell/aliasrc
df -h /dev/dm-0 /dev/sda3 /dev/sda4
helix .config/shell/aliasrc
h .config/zsh/.zshrc
ssa
ka
g
ka
ssa
~
ssa
~
h .config/zsh/.zshrc
h .config/nushell/env.nu
h .config/nushell/env.nu
lf
h .config/nushell/env.nu
h .config/nushell/config.nu
youtube "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
h .config/nushell/config.nu
youtube "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
yt-dlp res:480 "https://www.youtube.com/shorts/SVsV6lYZNW8"
pwd
yt-dlp res:480 "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
t 10m && mpv /home/fahmida/.local/bin/cock.mp4
t 10m | mpv /home/fahmida/.local/bin/cock.mp4
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 5m ; mpv /home/fahmida/.local/bin/cock.mp4
a
sdn
sudo sdn
sdn
sudo
ls
sdn
a
lf
mounter
ssa
h readme
lf
touch activity_log.tx
touch activity_log.txt
sdn
mounter
touch readme
h readme
lf
lf
h `others/writing/DAILY HOMEWORK.md`
lf
sdn
lf
mounter
touch some
h some
mounter
sdn
lf
mounter
d
a
t 25m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
h all-241111-2316-36.txt
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
h all-241112-0141-21.txt
mounter
h all-241112-1316-27.txt
yt-dlp res:480 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
yt-dlp --socket-timeout 60 --embed-chapters res:480 "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
yt-dlp -f 235 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
yt-dlp --list-formats "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
yt-dlp -f 136 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=qdG2ZuJ4LOc"
yt-dlp -f 136 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=mklEhT_RLos"
yt-dlp --list-formats "https://www.youtube.com/watch?v=mklEhT_RLos"
yt-dlp -f 138 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=mklEhT_RLos"
yt-dlp -f 198 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=mklEhT_RLos"
yt-dlp -f 298 --socket-timeout 60 --embed-chapters "https://www.youtube.com/watch?v=mklEhT_RLos"
lf
yt-dlp --list-formats "https://www.youtube.com/watch?v=mklEhT_RLos"
youtube "https://www.youtube.com/watch?v=mklEhT_RLos"
mounter
d
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
t 6m ; mpv /home/fahmida/.local/bin/cock.mp4
se
h a
touch a-copy
rm a-copy
cp a a-copy
h a-copy
a
h a
a
mounter
lf
h .config/shell/aliasrc]
h .config/shell/aliasrc
s
p
h .config/shell/aliasrc
p
h .config/nushell/config.nu
h all-241113-0407-53.txt
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
a
a
youtube "https://www.youtube.com/shorts/Y3cEv20YpEM"
h all-241113-1814-52.txt
mounter
cargo new mini_os --bin
cd mini_os/
lf
a
lf
d
mounter
pwd
lf
h .config/nushell/config.nu
~
h .config/nushell/config.nu
youtube "https://www.youtube.com/watch?v=fG1oNm2tCro"
h all-241113-2324-59.txt
lf
h all-241114-2116-42.txt
lf
sdn
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
mounter
h all-241115-1744-11.txt
a
lf
yay dmenu-bluetooth
rfkill list all
vktablet 
youtube "https://www.youtube.com/watch?v=KVnaoCSAIkw"
lf
sdn
h `others/writing/DAILY HOMEWORK.md`
cd .local/bin/
h tutorialvids
sudo make clean install
$ for lang in en fr es de iw;do printf "%s,%s-en,%s-it,%s-en-nP7-2PuUl7o," $(seq 4 | sed "c $lang");done | sed "s/,$/\n/"<\n>en,en-en,en-it,en-en-nP7-2PuUl7o,fr,fr-en,fr-it,fr-en-nP7-2PuUl7o,es,es-en,es-it,es-en-nP7-2PuUl7o,de,de-en,de-it,de-en-nP7-2PuUl7o,iw,iw-en,iw-it,iw-en-nP7-2PuUl7o
h ~/.config/mpv/mpv.conf
lf
cd ~/.config/mpv/
mpv https://www.youtube.com/watch?v=FfKJUo15NwI&list=PL9x7FyX9rBgmIeMS1oGp_rKV7DnoAOQx6&index=1&t=165s
mpv https://www.youtube.com/watch?v=FfKJUo15NwI
mpv --force-window=immediate '--ytdl-raw-options=format=best[height<=480]' https://www.youtube.com/watch?v=FfKJUo15NwI
mpv --force-window=immediate '--ytdl-raw-options=format=best[height<=480]' 'https://www.youtube.com/watch?v=FfKJUo15NwI'
mpv '--ytdl-raw-options=sub-lang="en,en-US",write-sub=,write-auto-sub=' 'https://www.youtube.com/watch?v=FfKJUo15NwI'
mpv 'https://www.youtube.com/watch?v=FfKJUo15NwI'
for lang in en fr es de iw;do printf "%s,%s-en,%s-it,%s-en-nP7-2PuUl7o," $(seq 4 | sed "c $lang");done | sed "s/,$/\n/"<\n>en,en-en,en-it,en-en-nP7-2PuUl7o,fr,fr-en,fr-it,fr-en-nP7-2PuUl7o,es,es-en,es-it,es-en-nP7-2PuUl7o,de,de-en,de-it,de-en-nP7-2PuUl7o,iw,iw-en,iw-it,iw-en-nP7-2PuUl7o
lf
mpv 'https://www.youtube.com/watch?v=FfKJUo15NwI'
cd ~/.config/mpv/
lf
~
t 3h ; mpv /home/fahmida/.local/bin/cock.mp4
mpv 'https://www.youtube.com/watch?v=BG8sTA90nPw'
d
lf
mounter
ebook-viewer `Rust in Action (Tim McNamara) (Z-Library).epub`
cd ~/.local/bin/
lf
h tutorialvids
wget "https://send.cm/odt3fxjcf0z9"
wget "https://d1112.download-send.com/d/ibyw3nkq6gosj4l4zj2vrhnhqeytrxenivzguay6new46eyfz42u3uouxkyztvzzm5q7ibce/Database%20Modernization.zip"
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
d
lf
mounter
ssa
ls
z `2 - Specification.docx`
zathura `2 - Specification.docx`
ebook-viewer `2 - Specification.docx`
pwd
h .config/nushell/config.nu
h /home/fahmida/.config/nushell/config.nu
~
1-hour-each-total-4-hours
cd ~/.local/bin/
pwd
s
ssa
ss
du
touch now.txt
du >> now.txt
du | cat >> now.txt
ls
du | now.txt
du
lf
lf
mounter
lf
s
h /home/fahmida/.config/nushell/config.nu
mounter
lf
cd ~/.config/shell/
sudo mount /dev/sdb /mnt/usb
cd /mnt/usb
lf
~
sudo fuser -km /dev/sdb
sudo umount /mnt/usb
lsblk 
lf
cd .local/bin/
xrandr
arandr 
bd
p
lf
p
lf
ebook-viewer `2 - Specification.docx`
arandr 
db
mounter
lf
xrandr
arandr 
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 2m ; mpv /home/fahmida/.local/bin/cock.mp4
a
arandr 
vktablet 
cargo new time_series_test
cd time_series_test/
lf
cargo run
lf
cargo run
pwd
h /home/fahmida/.config/nushell/config.nu
cargo run
lf
h test_main_1.rs
cargo run
h main_1.rs
cargo run
cargo add duckdb --features bundled
cargo run
cargo add duckdb --features bundled
arandr 
cargo run
lf
cargo run
cd /usr/bin/
find / -name lf
find / -name "ld"
cargo run
yay duckdb
yu
sudo  pacman -Sy archlinux-keyring artix-keyring
sudo pacman -Sy archlinux-keyring artix-keyring
rm -r /etc/pacman.d/gnupg
sudo rm -r /etc/pacman.d/gnupg
pacman-key --init
sudo pacman-key --init
pacman-key --populate archlinux artix
sudo pacman-key --populate archlinux artix
pacman -Scc
sudo pacman -Scc
pacman -Syyu
h time_tracking.txt
sudo pacman -Syyu
yu
youtube "https://www.youtube.com/watch?v=m7mNKLccZkY"
arandr 
sudo pacman -Sy archlinux-keyring artix-keyring
sudo rm -r /etc/pacman.d/gnupg
sudo pacman-key --init
sudo pacman-key --populate archlinux artix
yc
yay -Sc; yay -Yc
yu
yr alacritty
yr marksman
h .config/helix/config.toml
h .config/helix/languages.toml
yu
vktablet 
ssa
arandr 
yay duckdb
yr duckdb
yc
p
h .config/shell/aliasrc
h .config/nushell/config.nu
p
lf
a
podman login docker.io
docker pull datacatering/duckdb
podman pull datacatering/duckdb
h /etc/containers/registries.conf
sudo helix /etc/containers/registries.conf
podman pull datacatering/duckdb
sudo helix /etc/containers/registries.conf
podman pull datacatering/duckdb
sudo helix /etc/containers/registries.conf
podman pull datacatering/duckdb
podman run -v $(pwd):/w -w /w duckdb:latest /w/my.duckdb
podman run -v :/w -w /w duckdb:latest /w/my.duckdb
sudo podman run -v :/w -w /w duckdb:latest /w/my.duckdb
mounter
podman run --help
podman ps
podman images
docker exec -it docker.io/datacatering/duckdb:v1.0.0 bash
podman exec -it docker.io/datacatering/duckdb:v1.0.0 bash
podman-images
podman images
podman ps
podman ps -a
podman pod ps --ctr-names
podman pod ps --ctr-names -a
podman pod ps --ctr-names
podman pod ps
podman exec -it datacatering/duckdb:v1.0.0 bash
podman ps
podman exec -it docker.io/datacatering/duckdb:v1.0.0 bash
podman exec -it "docker.io/datacatering/duckdb:v1.0.0" bash
podman exec -it 3552ec3c2df8 bash
podman run -it datacatering/duckdb:v1.0.0
podman ps
podman ps -a
podman stop =l
podman stop -l
podman ps -a
docker run -it datacatering/duckdb:v1.0.0
podman run -it datacatering/duckdb:v1.0.0
padman build -t time_series_test .
a
podman build -t time_series_test .
cargo --version
lf
podman images
podman build -t time_series_test .
top
top -b
ls
which ls
which cat
podman images
podman build -t time_series_test .
podman images
podman image rmi 3f3837fa2845 a58e3824ff32 df113326a08e 00150f445191
podman rmi 3f3837fa2845 a58e3824ff32 df113326a08e 00150f445191
podman images
podman run -p 8080:80 time_series_test
current-project 
podman ps
podman stop 8080:80 time_series_test
podman images
podman ps
pdman ps -a
podman ps -a
podman images
podman run -i time_series_test
podman ps
podman ps -a
podman stop time_series_test
podman run -id time_series_test
podman ps
podman stop time_series_test
podman images
lf
podman ps -a
podman rm confident_johnson
podman ps -a
podman rm festive_goldberg
podman rm nifty_bohr compassionate_mclaren
podman ps -a
podman images
podman build -di time_series_test
podman build -d -i time_series_test
podman build -i time_series_test
podman ps -a
podman images
podman run -di time_series_test
podman ps
podman run -di 1f888d2e3b3b
podman ps
podman ps -a
podman images
podman run -it localhost/time_series_test;
podman run -it localhost/time_series_test
podman run --name test -p 3306:3306 localhost/time_series_test
podman run -it --rm localhost/time_series_test test_1
podman run -it --rm localhost/time_series_test
podman rmi 1f888d2e3b3b
podman rmi 1f888d2e3b3b -f
podman ps -a
podman images
docker build -t test .
podman build -t test .
h .config/nushell/config.nu
d images
d build -t my-image .
d images
d run -p 4000:80 my-image
d build -t my-image-2 .
d run -p 4000:80 my-image-2
d ps
d ps -a
docker exec -it dazzling_zhukovsky bash
dexec -it dazzling_zhukovsky bash
d exec -it dazzling_zhukovsky bash
podman run -ti my-image-2 /bin/bash
d ps
d ps -a
d build -t my-image-3 .
podman run -ti my-image-3 /bin/bash
d images
d rmi 67a755883e24 bd68fb835b85 7934d6c20587 df113326a08e 509ba615599f
d ps -a
d rm -a
d ps -a
d build -t my-image .
d images
d rmi 67a755883e24 bd68fb835b85 7934d6c20587
d images
d rmi df113326a08e 509ba615599f
d images
lf
current-project 
wget "https://github.com/duckdb/duckdb/releases/download/v1.1.3/duckdb_cli-linux-aarch64.zip"
ls
unzip duckdb_cli-linux-aarch64.zip
d run -ti my-image /bin/bash
$ docker build -t my-rust-app .<\n>$ docker run -it --rm --name my-running-app my-rust-app<\n>
d build -t my-rust-app .
docker run -it --rm --name my-running-app my-rust-app
d run -it --rm --name my-running-app my-rust-app
d images
d run -ti my-rust-app /bin/bash
d run -ti my-rust-app-2 /bin/bash
d build -t my-rust-app-2 .
cp duckdb /usr/bin/ld
ls /usr/bin/ld
./duckdb
sudo chmod 744 ./duckdb
./duckdb
wget "https://github.com/duckdb/duckdb/releases/download/v1.1.3/duckdb_cli-linux-amd64.zip"
./duckdb
ls
d run -ti my-rust-app-2 /bin/bash
d images
d rmi ea5cf789aa0f
d rmi ea5cf789aa0f -f
cp duckdb /usr/bin/
sudo cp duckdb /usr/bin/
d build -t my-rust-app-2 .
duckbd 
duckdb
d build -t app .
current-project 
d ps
d images
d rmi df914e8b12ed 450e78799353 7421adc7f80d dfd7699a2f34 -f
d ps
d images
h .dockerignore
lf
h .dockerignore
lf
h .dockerignore
current-project 
d build -t app-1 .
cargo --version
d build -t app-1 .
d
da
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
da
arandr 
da
arandr 
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
cd .local/bin/
arandr 
vktablet 
arandr 
cd .local/bin/
arandr 
da
t 40m ; mpv /home/fahmida/.local/bin/cock.mp4
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
t 40m ; mpv /home/fahmida/.local/bin/cock.mp4
c
t 35m ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
o
h .config/nushell/config.nu
pa
dal
dl
cd .local/bin/
h dl
dl
c
dl
a
p
a
dl
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
a
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
a
a
c
dl
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
o
tm
r
ra
cd .local/bin/
lf
~
n
ls
lf
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
n life reading
p
a
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
a
n lessoning sires
a
dl
a
arandr 
cd .local/bin/
lf
dl
p
lf
mounter
a
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
pwd
~
h .config/nushell/config.nu
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
ls
dl
tor-dir 
mpv 'https://www.youtube.com/watch?v=rK36sFWoDyM'
mpv 'https://www.youtube.com/watch?v=Pw7aeYovlTc'
mpv 'https://www.youtube.com/watch?v=qaA7_N1THvk'
mpv 'https://www.youtube.com/watch?v=MgvAsbWdD2w'
arandr 
mpv 'https://www.youtube.com/watch?v=MgvAsbWdD2w'
mounter
mpv 'https://www.youtube.com/watch?v=KMv6mKILe08'
dl
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
p
mpv 'https://www.youtube.com/watch?v=aL_1yPObC6Y'
arandr 
mounter
o
p
arandr 
cd .local/bin/
p
cd .local/bin/
lf
p
cd .local/bin/
lf
~
cd .local/bin/
dl
cd .local/bin/
dl
da
dl
mounter
lf
n
t 55m ; mpv /home/fahmida/.local/bin/cock.mp4
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
t 55m ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
a
n watching bull shit
cd .local/bin/
mpv 'https://www.youtube.com/watch?v=m0iETQ9Zpjs&list=PL9x7FyX9rBgl4eCO2B10AH4Ko4obLovIS&index=2'
a
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
p
da
lf
cd .local/bin/
a
cd .local/bin/
ss
h .config/nushell/config.nu
du -h --max-depth=1 | sort -hr
ssa
a
da
dl
lf
mounter
lf
mounter
vktablet 
dl
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
lf
h `others/writing/DAILY HOMEWORK.md`
t 25 ; mpv /home/fahmida/.local/bin/cock.mp4
t 25m ; mpv /home/fahmida/.local/bin/cock.mp4
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
cd .local/bin/
maim -u -s pic-selected-"${output}"
maim -u -s pic-selected-"$(date '+%y%m%d-%H%M-%S').png"
sudo make clean install
h things
h all-241110-1853-15
h to-do
lf
mounter
a
p
mounter
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
h all-241211-2201-08.txt
t 2h ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
p
mounter
lf
cd .local/bin/
h n
h nn
sudo chmod 744 ./nn
cd .local/bin/
h nn
~
nn 3m learning video and documenting how to I execute
cat activity_log.txt
nn 10m learning video and documenting how to I execute
cat activity_log.txt
nn 15m learning video and documenting what to do
nn 30m learning videos
cat activity_log.txt
nn 15m learning videos
p
lf
ss
du -h --max-depth=1
du -h --max-depth=1 | sort -hr
ls
du -h --max-depth=1
du --max-depth=1
h .config/shell/aliasrc
ssa
df /dev/dm-0 /dev/sda3 /dev/sda4
ss
du --max-depth=1
lf
df -h /dev/dm-0 /dev/sda3 /dev/sda4
df -h
df
nn 15m learning videos
cat activity_log.txt
nn 15m learning videos
nn 30m fimilarty of language by reading 3rd door
nn 30m reading tech books for language fimilarty, todos, and for OS building
cat activity_log.txt
h activity_log.txt
n watching bull shit deseptionest learning video
vktablet 
nn 1h reading tech books for language fimilarty, chapter todos, and for OS building
cat activity_log.txt
cd .local/bin/
h nn
n now actual learning
cat activity_log.txt
lf
h `others/writing/DAILY HOMEWORK.md`
lf
a
h Effective-Rust.md
~
nn 1h reading tech books for language fimilarty, chapter todos, and for OS building
a
nn 15m reading tech books for language fimilarty, chapter todos, and for OS building
h `others/writing/DAILY HOMEWORK.md`
vktablet 
nn 15m reading tech books for language fimilarty, chapter todos, and for OS building
nn 1h reading tech books for language fimilarty, chapter todos, and for OS building
lf
mounter
vktablet 
a
cd .local/bin/
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
da
lf
mounter
ss
ls
d
da
ss
lf
l~
~
ls
lf
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
h gu-rut-to
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
t 30m ; mpv /home/fahmida/.local/bin/cock.mp4
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
mounter
pwd
p
lf
mounter
p
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
a
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
h `others/writing/DAILY HOMEWORK.md`
mounter
p
a
p
lf
mounter
lf
ln -s ./ /home/fahmida/
ln -s ./ /home/fahmida/1/
pwd
ln -s `/mnt/3/Courses/media/audiobooks/1 Computer Programming/I want to become an outstanding Coder/` /home/fahmida/1/
ss
du
lf
lf ./
lf
ln
t 20m ; mpv /home/fahmida/.local/bin/cock.mp4
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
lf
h read
lf
mounter
ln
h .config/nushell/config.nu
vktablet 
lf
h rust_learnings_pattern.rs
lf
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 25m ; mpv /home/fahmida/.local/bin/cock.mp4
t 10m ; mpv /home/fahmida/.local/bin/cock.mp4
t 25m ; mpv /home/fahmida/.local/bin/cock.mp4
p
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
t 25m ; mpv /home/fahmida/.local/bin/cock.mp4
t 1h ; mpv /home/fahmida/.local/bin/cock.mp4
t 22m ; mpv /home/fahmida/.local/bin/cock.mp4
a
t 22m ; mpv /home/fahmida/.local/bin/cock.mp4
t 55m ; mpv /home/fahmida/.local/bin/cock.mp4
arandr
mounter
p
arandr
vktablet 
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
h `others/writing/DAILY HOMEWORK.md`
lf
cd .local/bin/
n os tutorial
h n
h nn
rustup target list
lf
cargo run
lf
ln
cargo run
file target/debug/mini_os
rustup target list
h .config/zsh/.zshrc
lf .config/shell/
rustup target list
cargo run
lf
ln
ln
cargo run
lf
lf
rustup target list
h .config/zsh/.zshrc
cargo build
file target/debug/mini_os
ln
~
lfh ~/.carg
mkdir .cargo
h .config/config.toml
lf
cargo build
touch config.toml
lf
rustup target add x86_64-unknown-none
cargo build
da
cd .local/bin/
h a
h aa
sudo chmod 744 ./a
sudo chmod 744 ./aa
h aa
aa
~
a
cd .local/bin/
lf
dl
al
lf
mounter
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
t 5m ; mpv /home/fahmida/.local/bin/cock.mp4
a
du
lf
h `others/writing/DAILY HOMEWORK.md`
ssa
du
lf
ln
p
ln
lf
du
lf
du
ssa
t 15m ; mpv /home/fahmida/.local/bin/cock.mp4
git status
lf
git remote
git remote -v
git add .
git commit
git push origin master
git status
git remote -v
ln
git add .
git init
git remote -v
git init
touch .gitignore
lf
ln
git add .
ln
git remote add origin git@github.com:tasnuva1/timetabee.git
git remote -v
git add .
git commit
git push origin master
git push origin master -f
git add .
git commit
git push origin master -f
t 5m ; mpv /home/fahmida/.local/bin/cock.mp4
du
lf
du
t 5m ; mpv /home/fahmida/.local/bin/cock.mp4
git status
git add .
git commit
lf
ln
git remote -v
git remote add origin git@github.com:tasnuva1/Building-Shell.git
git add .
git commit
git remote -v
git add .
touch .gitignore
git add .
git commit
git push origin master
t 5m ; mpv /home/fahmida/.local/bin/cock.mp4
git add .
ln
git add .
ln
t 2m ; mpv /home/fahmida/.local/bin/cock.mp4
git add .
git commit
lf
t 5m ; mpv /home/fahmida/.local/bin/cock.mp4
t m ; mpv /home/fahmida/.local/bin/cock.mp4
ln
